// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// URL URL is a custom URL type that allows validation at configuration load time.
//
// swagger:model URL
type URL struct {

	// force query
	ForceQuery bool `json:"ForceQuery,omitempty"`

	// fragment
	Fragment string `json:"Fragment,omitempty"`

	// host
	Host string `json:"Host,omitempty"`

	// omit host
	OmitHost bool `json:"OmitHost,omitempty"`

	// opaque
	Opaque string `json:"Opaque,omitempty"`

	// path
	Path string `json:"Path,omitempty"`

	// raw fragment
	RawFragment string `json:"RawFragment,omitempty"`

	// raw path
	RawPath string `json:"RawPath,omitempty"`

	// raw query
	RawQuery string `json:"RawQuery,omitempty"`

	// scheme
	Scheme string `json:"Scheme,omitempty"`

	// user
	User Userinfo `json:"User,omitempty"`
}

// Validate validates this URL
func (m *URL) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this URL based on context it is used
func (m *URL) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *URL) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *URL) UnmarshalBinary(b []byte) error {
	var res URL
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
