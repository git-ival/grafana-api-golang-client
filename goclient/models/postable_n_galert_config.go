// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostableNGalertConfig postable n galert config
//
// swagger:model PostableNGalertConfig
type PostableNGalertConfig struct {

	// alertmanagers choice
	// Enum: [all internal external]
	AlertmanagersChoice string `json:"alertmanagersChoice,omitempty"`
}

// Validate validates this postable n galert config
func (m *PostableNGalertConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAlertmanagersChoice(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postableNGalertConfigTypeAlertmanagersChoicePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["all","internal","external"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postableNGalertConfigTypeAlertmanagersChoicePropEnum = append(postableNGalertConfigTypeAlertmanagersChoicePropEnum, v)
	}
}

const (

	// PostableNGalertConfigAlertmanagersChoiceAll captures enum value "all"
	PostableNGalertConfigAlertmanagersChoiceAll string = "all"

	// PostableNGalertConfigAlertmanagersChoiceInternal captures enum value "internal"
	PostableNGalertConfigAlertmanagersChoiceInternal string = "internal"

	// PostableNGalertConfigAlertmanagersChoiceExternal captures enum value "external"
	PostableNGalertConfigAlertmanagersChoiceExternal string = "external"
)

// prop value enum
func (m *PostableNGalertConfig) validateAlertmanagersChoiceEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, postableNGalertConfigTypeAlertmanagersChoicePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PostableNGalertConfig) validateAlertmanagersChoice(formats strfmt.Registry) error {
	if swag.IsZero(m.AlertmanagersChoice) { // not required
		return nil
	}

	// value enum
	if err := m.validateAlertmanagersChoiceEnum("alertmanagersChoice", "body", m.AlertmanagersChoice); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this postable n galert config based on context it is used
func (m *PostableNGalertConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PostableNGalertConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PostableNGalertConfig) UnmarshalBinary(b []byte) error {
	var res PostableNGalertConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
